const t=["circle","clipPath","defs","desc","ellipse","g","image","line","linearGradient","marker","mask","path","pattern","polygon","polyline","radialGradient","rect","stop","svg","switch","symbol","text","textPath","title","tspan","use"],e={"xlink:href":"http://www.w3.org/1999/xlink"};module.exports=function(n,{style:i,listeners:r,attributes:s,ref:a,domProps:o,dataset:l}={},c){const[d,...f]=n.split("."),p=-1!==t.indexOf(d)?document.createElementNS("http://www.w3.org/2000/svg",d):document.createElement(d);if(f.length&&f.forEach(t=>p.classList.add(t)),s)for(const t in s){var h=s[t];h&&(e.hasOwnProperty(t)?p.setAttributeNS(e[t],t,h):p.setAttribute(t,h))}if(o)for(const t in o)p[t]=o[t];if(i)for(const t in i)p.style[t]=i[t];if(r)for(const t in r)p.addEventListener(t,r[t],!1);if(c)if(Array.isArray(c))c.forEach(t=>{t&&(t instanceof Element?p.appendChild(t):p.appendChild(create(...t)))});else if("string"==typeof c){const t=document.createTextNode(c);p.appendChild(t)}if(a&&a(p),l)for(const t in l)p.dataset[t]=l[t];return p};
//# sourceMappingURL=create-element.min.modern.js.map
